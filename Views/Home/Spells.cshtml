@model FourPlayCharacterCreator.Models.Character

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<select id="MasterSpellList" asp-items="Html.GetEnumSelectList<Spell>()" hidden disabled>
    <option selected="selected" value=""></option>
</select>
<select id="MasterPsionicSpellList" asp-items="Html.GetEnumSelectList<PsionicSpell>()" hidden disabled>
    <option selected="selected" value=""></option>
</select>

<h4>Step 2) Choose Spells</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Spells" asp-controller="Home" method="post">
            <h3>Spellcaster Type</h3>
            <div class="form-group">
                <select id="SpellcasterType" name="SpellcasterType" asp-items="Html.GetEnumSelectList<SpellcasterType>()" onchange="SpellcasterTypeChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <h4 id="MagicHeader"></h4>
            <div class="form-group">
                <select id="MagicDomain" name="MagicDomain" asp-items="Html.GetEnumSelectList<MagicDomain>()" onchange="MagicDomainChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <h4 id="MagicSpellsHeader">Magic Spells</h4>
            <div class="form-group">
                <select id="Spell1" name="Spell1" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="Spell2" name="Spell2" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="Spell3" name="Spell3" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="Spell4" name="Spell4" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <br />
            <h4 id="PsionicHeader"></h4>
            <div class="form-group">
                <select id="PsionicDomain" name="PsionicDomain" asp-items="Html.GetEnumSelectList<PsionicDomain>()" onchange="PsionicDomainChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <h4 id="PsionicSpellsHeader">Psionic Spells</h4>
            <div class="form-group">
                <select id="PsionicSpell1" name="PsionicSpell1" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="PsionicSpell2" name="PsionicSpell2" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="PsionicSpell3" name="PsionicSpell3" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="PsionicSpell4" name="PsionicSpell4" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Finish" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    let spellcasterTypeDropdown = document.getElementById("SpellcasterType");

    let MagicHeader = document.getElementById("MagicHeader");
    let MagicSpellsHeader = document.getElementById("MagicSpellsHeader");
    let magicDomainDropdown = document.getElementById("MagicDomain");
    let Spell1Dropdown = document.getElementById("Spell1");
    let Spell2Dropdown = document.getElementById("Spell2");
    let Spell3Dropdown = document.getElementById("Spell3");
    let Spell4Dropdown = document.getElementById("Spell4");

    let PsionicHeader = document.getElementById("PsionicHeader");
    let PsionicSpellsHeader = document.getElementById("PsionicSpellsHeader");
    let PsionicDomainDropdown = document.getElementById("PsionicDomain");
    let PsionicSpell1Dropdown = document.getElementById("PsionicSpell1");
    let PsionicSpell2Dropdown = document.getElementById("PsionicSpell2");
    let PsionicSpell3Dropdown = document.getElementById("PsionicSpell3");
    let PsionicSpell4Dropdown = document.getElementById("PsionicSpell4");

    hideAll();

    function hideAll()
    {
        MagicHeader.innerHTML = "";
        PsionicHeader.innerHTML = "";
        PsionicSpellsHeader.innerHTML = "";
        MagicSpellsHeader.innerHTML = "";
        magicDomainDropdown.hidden = true;
        Spell1Dropdown.hidden = true;
        Spell2Dropdown.hidden = true;
        Spell3Dropdown.hidden = true;
        Spell4Dropdown.hidden = true;
        PsionicDomainDropdown.hidden = true;
        PsionicSpell1Dropdown.hidden = true;
        PsionicSpell2Dropdown.hidden = true;
        PsionicSpell3Dropdown.hidden = true;
        PsionicSpell4Dropdown.hidden = true;
    }

    function SpellcasterTypeChange()
    {
        if(spellcasterTypeDropdown.value == 0) //none
        {
            hideAll();
        }
        else if (spellcasterTypeDropdown.value == 1) //magic
        {
            hideAll();
            MagicHeader.innerHTML = "Magic Domain";
            MagicSpellsHeader.innerHTML = "Magic Spells";
            magicDomainDropdown.hidden = false;
        }
        else if (spellcasterTypeDropdown.value == 2) //psionic
        {
            hideAll();
            PsionicHeader.innerHTML = "Psionic Domain";
            PsionicSpellsHeader.innerHTML = "Psionic Spells";
            PsionicDomainDropdown.hidden = false;
        }
    }

    function MagicDomainChange()
    {
        let MagicDomain = document.getElementById("MagicDomain");
        let MasterSpellList = document.getElementById("MasterSpellList");
        let Spell1 = document.getElementById("Spell1");
        let Spell2 = document.getElementById("Spell2");
                let Spell3 = document.getElementById("Spell3");
        let Spell4 = document.getElementById("Spell4");

        Spell1.hidden = false;
        Spell2.hidden = false;
        Spell3.hidden = false;
        Spell4.hidden = false;

        //Ensure Spells are refreshed from the Master Spell List (only for 1 & 2 as 3 and 4 can be any)
        removeOptions(Spell1);
        removeOptions(Spell2);
        copyDropdown(MasterSpellList, Spell1);
        copyDropdown(MasterSpellList, Spell2);

        //Get the package selected
        var selectedDomain = MagicDomain.options[MagicDomain.selectedIndex].text;

        switch(selectedDomain)
        {
            case "Unknown":
            cascadeDropdown(Spell1, [0,1,2,3,4,5,6,7]);
            cascadeDropdown(Spell2, [0,1,2,3,4,5,6,7]);
            break;
            case "Sky":
            cascadeDropdown(Spell1, [8,9,10,11,12,13,14,15]);
            cascadeDropdown(Spell2, [8,9,10,11,12,13,14,15]);
            break;
            case "Surface":
            cascadeDropdown(Spell1, [16,17,18,19,20,21,22,23]);
            cascadeDropdown(Spell2, [16,17,18,19,20,21,22,23]);
            break;
            case "Underworld":
            cascadeDropdown(Spell1, [24,25,26,27,28,29,30,31]);
            cascadeDropdown(Spell2, [24,25,26,27,28,29,30,31]);
            break;
        }
    }

    function PsionicDomainChange()
    {
        let PsionicDomain = document.getElementById("PsionicDomain");
        let MasterPsionicSpellList = document.getElementById("MasterPsionicSpellList");
        let PsionicSpell1 = document.getElementById("PsionicSpell1");
        let PsionicSpell2 = document.getElementById("PsionicSpell2");
        let PsionicSpell3 = document.getElementById("PsionicSpell3");
        let PsionicSpell4 = document.getElementById("PsionicSpell4");

        PsionicSpell1.hidden = false;
        PsionicSpell2.hidden = false;
        PsionicSpell3.hidden = false;
        PsionicSpell4.hidden = false;

        //Ensure Spells are refreshed from the Master Spell List
        removeOptions(PsionicSpell1);
        removeOptions(PsionicSpell2);
        copyDropdown(MasterPsionicSpellList, PsionicSpell1);
        copyDropdown(MasterPsionicSpellList, PsionicSpell2);

        //Get the package selected
        var selectedDomain = PsionicDomain.options[PsionicDomain.selectedIndex].text;

        switch(selectedDomain)
        {
            case "Telepathy":
            cascadeDropdown(PsionicSpell1, [0,1,2,3,4,5,6,7]);
            cascadeDropdown(PsionicSpell2, [0,1,2,3,4,5,6,7]);
            break;
            case "Faith Healing":
            cascadeDropdown(PsionicSpell1, [8,9,10,11,12,13,14,15]);
            cascadeDropdown(PsionicSpell2, [8,9,10,11,12,13,14,15]);
            break;
            case "Temporalism":
            cascadeDropdown(PsionicSpell1, [16,17,18,19,20,21,22,23]);
            cascadeDropdown(PsionicSpell2, [16,17,18,19,20,21,22,23]);
            break;
            case "Psychokinesis":
            cascadeDropdown(PsionicSpell1, [24,25,26,27,28,29,30,31]);
            cascadeDropdown(PsionicSpell2, [24,25,26,27,28,29,30,31]);
            break;
        }
    }

    //Reduce Spell Dropdown Based on Domain
    function cascadeDropdown(dropdownElement, filterArray) {
        var L = dropdownElement.options.length - 1;
        for (let i = L; i >= 0; i--) {

            var currentValue = Number(dropdownElement.options[i].value); //had to cast to number, they were coming back as string.

            //if the value is not in the filtered list then remove it
            if(filterArray.includes(currentValue) === false)
            {
                dropdownElement.remove(i);
            }
        }
    }

    //Clear a Dropdown List
    function removeOptions(selectElement) {
        var i, L = selectElement.options.length - 1;
        for(i = L; i >= 0; i--) {
            selectElement.remove(i);
        }
    }

    //Rebuild Competency Dropdown
    function copyDropdown(copyFrom, copyTo) {
        for (let i = 0; i < copyFrom.options.length; i++) {
            let option = copyFrom.options[i]; //fetch from the master list

            //construct a new option here
            let newOption = document.createElement("option");
            newOption.value = option.value
            newOption.innerHTML = option.innerHTML

            //add the value to the dropdown
            copyTo.add(newOption);
        }
    }
</script>
@model FourPlayCharacterCreator.Models.Character

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<select id="MasterSpellList" asp-items="Html.GetEnumSelectList<Spell>()" hidden disabled>
    <option selected="selected" value=""></option>
</select>
<select id="MasterPsionicSpellList" asp-items="Html.GetEnumSelectList<PsionicSpell>()" hidden disabled>
    <option selected="selected" value=""></option>
</select>

<h4>Step 2) Choose a Package</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Spells" asp-controller="Home" method="post">
            <h3>Spellcaster Type</h3>
            <div class="form-group">
                <select id="SpellcasterType" name="SpellcasterType" asp-items="Html.GetEnumSelectList<SpellcasterType>()" onchange="SpellcasterTypeChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <br />
            <h4>Magic Domain</h4>
            <div class="form-group">
                <select id="MagicDomain" name="MagicDomain" asp-items="Html.GetEnumSelectList<MagicDomain>()" onchange="MagicDomainChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <h4>Magic Spells</h4>
            <div class="form-group">
                <select id="Spell1" name="Spell1" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="Spell2" name="Spell2" asp-items="Html.GetEnumSelectList<Spell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <br />
            <h4>Psionic Domain</h4>
            <div class="form-group">
                <select id="PsionicDomain" name="PsionicDomain" asp-items="Html.GetEnumSelectList<PsionicDomain>()" onchange="PsionicDomainChange()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <h4>Psionic Spells</h4>
            <div class="form-group">
                <select id="PsionicSpell1" name="PsionicSpell1" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <select id="PsionicSpell2" name="PsionicSpell2" asp-items="Html.GetEnumSelectList<PsionicSpell>()">
                    <option selected="selected" value=""></option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Distribute Dice" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">

    let spellcasterTypeDropdown = document.getElementById("SpellcasterType");
    let magicDomainDropdown = document.getElementById("MagicDomain");
    let Spell1Dropdown = document.getElementById("Spell1");
    let Spell2Dropdown = document.getElementById("Spell2");
    let PsionicDomainDropdown = document.getElementById("PsionicDomain");
    let PsionicSpell1Dropdown = document.getElementById("PsionicSpell1");
    let PsionicSpell2Dropdown = document.getElementById("PsionicSpell2");

    hideAll();

    function hideAll()
    {
        magicDomainDropdown.hidden = true;
        Spell1Dropdown.hidden = true;
        Spell2Dropdown.hidden = true;
        PsionicDomainDropdown.hidden = true;
        PsionicSpell1Dropdown.hidden = true;
        PsionicSpell2Dropdown.hidden = true;
    }

    function SpellcasterTypeChange()
    {
        if(spellcasterTypeDropdown.value == 0) //none
        {
            hideAll();
        }
        else if (spellcasterTypeDropdown.value == 1) //magic
        {
            hideAll();
            magicDomainDropdown.hidden = false;
        }
        else if (spellcasterTypeDropdown.value == 2) //psionic
        {
            hideAll();
            PsionicDomainDropdown.hidden = false;
        }
    }

    function MagicDomainChange()
    {
        let MagicDomain = document.getElementById("MagicDomain");
        let MasterSpellList = document.getElementById("MasterSpellList");
        let Spell1 = document.getElementById("Spell1");
        let Spell2 = document.getElementById("Spell2");

        Spell1.hidden = false;
        Spell2.hidden = false;

        //Ensure Spells are refreshed from the Master Spell List
        removeOptions(Spell1);
        removeOptions(Spell2);
        copyDropdown(MasterSpellList, Spell1);
        copyDropdown(MasterSpellList, Spell2);

        //Get the package selected
        var selectedDomain = MagicDomain.options[MagicDomain.selectedIndex].text;

        switch(selectedDomain)
        {
            case "Unknown":
            cascadeDropdown(Spell1, [0,1,2,3,4,5,6,7]); //Armed or Unarmed Combat
            cascadeDropdown(Spell2, [0,1,2,3,4,5,6,7]); //Armed or Unarmed Combat
            break;
        }
    }

    //Reduce Spell Dropdown Based on Domain
    function cascadeDropdown(dropdownElement, filterArray) {
        var L = dropdownElement.options.length - 1;
        for (let i = L; i >= 0; i--) {

            var currentValue = Number(dropdownElement.options[i].value); //had to cast to number, they were coming back as string.

            //if the value is not in the filtered list then remove it
            if(filterArray.includes(currentValue) === false)
            {
                dropdownElement.remove(i);
            }
        }
    }

    //Clear a Dropdown List
    function removeOptions(selectElement) {
        var i, L = selectElement.options.length - 1;
        for(i = L; i >= 0; i--) {
            selectElement.remove(i);
        }
    }

    //Rebuild Competency Dropdown
    function copyDropdown(copyFrom, copyTo) {
        for (let i = 0; i < copyFrom.options.length; i++) {
            let option = copyFrom.options[i]; //fetch from the master list

            //construct a new option here
            let newOption = document.createElement("option");
            newOption.value = option.value
            newOption.innerHTML = option.innerHTML

            //add the value to the dropdown
            copyTo.add(newOption);
        }
    }
</script>